"use strict";

// 1. Необходимо вывести сообщение в консоль "все теги прогрузились", когда все теги будут созданы браузером.

window.addEventListener('DOMContentLoaded', function() {
    console.log('все теги прогрузились')
})

// 2. Необходимо вывести сообщение в консоль "страница загрузилась", когда все ресурсы страницы будут загружены.

window.addEventListener('load', function() {
    console.log('страница загрузилась')
})

// 3. При клике на какой - либо тег на странице в консоль должно выводиться сообщение наподобие:
//     -Класс "super_element"
// присутствует в элементе "div". -
//     сообщение должно определять присутствует или отсутствует класс "super_element" -
//     у элемента, а также выводить в нижнем регистре верный тег в данной строке, по -
//     которому был совершен клик. -
//     Необходимо использовать делегирование.

document.addEventListener('click', event => {
    const element = event.target.classList.contains('super_element') ? 'присутствует' : 'отсутствует';
    console.log(`Класс "super_element" ${element} в элементе ${event.target.tagName.toLowerCase()}`);
});


// 4. Сделайте, чтобы при наведении на textarea в консоли появлялось сообщение: "Вы навели на textarea."

const textarea = document.querySelector('textarea');
textarea.addEventListener('mouseover', event => {
    console.log(`Вы навели на ${event.target.tagName.toLowerCase()}.`)
});

// 5. Необходимо повесить событие клика на тег ul.В обработчике события в консоль необходимо выводить текст, который записан внутри элемента кнопки, по которой был произведен клик.Если клик был не по кнопке, то ничего выводить не нужно.Необходимо использовать делегирование.

document.querySelector('ul').addEventListener('click', function(event) {
    if (event.target.tagName.toLowerCase() === 'button') {
        console.log(event.target.innerText);
    }
});

// 6. Вопрос: Почему в console.log пишется сначала текст из 5 задания и только потом выводится текст из 3 задания, если мы кликаем по кнопкам в ul ? Ответ необходимо написать здесь же, под этим комментарием, своими словами.

// Сначала событие опускается вниз от document корневого элемента и через всех предков целевого элемента(фаза захвата / погружения). Событие происходит на целевом элемента(фаза цели). И наконец, событие всплывает вверх через элементы, являющиеся предками, пока не достигнет корневого элемента, document (фаза всплытия). Так как в задании 5 мы отлавливаем предка, который лежит ближе к цели и добавляем соыбытие на него, то оно срабатывает ранее, чем задание 3, в котором событие добавлено на документ.

// 7. С помощью JS необходимо изменить цвет заднего фона каждого второго тега li.

document.querySelectorAll('li:nth-child(2n)').forEach(element => { element.style.backgroundColor = 'black' });