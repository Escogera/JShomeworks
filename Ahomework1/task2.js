'use strict';

// Вы управляете рестораном, в котором работают разные повара, специализирующиеся на определенных блюдах.Клиенты приходят и делают заказы на разные блюда.

// Необходимо создать систему управления этими заказами, которая позволит:

//     •Отслеживать, какой повар готовит какое блюдо.•Записывать, какие блюда заказал каждый клиент.

// Используйте коллекции Map для хранения блюд и их поваров, а также для хранения заказов каждого клиента.В качестве ключей для клиентов используйте объекты.

// Повара и их специализации:

// Виктор - специализация: Пицца.
// Ольга - специализация: Суши.
// Дмитрий - специализация: Десерты.

// Блюда и их повара:

// Пицца "Маргарита" - повар: Виктор.
// Пицца "Пепперони" - повар: Виктор.
// Суши "Филадельфия" - повар: Ольга.
// Суши "Калифорния" - повар: Ольга.
// Тирамису - повар: Дмитрий.
// Чизкейк - повар: Дмитрий.

// Заказы:

// Клиент Алексей заказал: Пиццу "Пепперони"
// и Тирамису.
// Клиент Мария заказала: Суши "Калифорния"
// и Пиццу "Маргарита".
// Клиент Ирина заказала: Чизкейк.

let cooks = new Map();

cooks.set("Виктор", "Пицца");
cooks.set("Ольга", "Суши");
cooks.set("Дмитрий", "Десерт");

let orders = new Map();

let clientOne = { name: "Алексей" };
let clientOneOrder = new Set();
clientOneOrder.add([
    "'Пепперони' пицца - повар: Виктор",
    "Тирамису - повар: Дмитрий",
]);

let clientTwo = { name: "Марина" };
let clientTwoOrder = new Set();
clientTwoOrder.add([
    "'Калифорния' суши - повар: Ольга",
    "'Маргарита' пицца - повар: Виктор",
]);

let clientThree = { name: "Ирина" };
let clientThreeOrder = new Set();
clientThreeOrder.add(["Чизкейк - повар: Дмитрий"]);

orders.set(clientOne, clientOneOrder);
orders.set(clientTwo, clientTwoOrder);
orders.set(clientThree, clientTwoOrder);

for (let [key, value] of cooks) {
    console.log(`${key} специализируется на ${value}`);
}

for (let [key, value] of orders) {
    console.log(`Посетитель ${key.name} заказал: ${new Array(...value).join(" ")}`);
}